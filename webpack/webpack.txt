 How to use Webpack? 
 To start with, go to the directory in which you wish to use webpack and do the following:
 npm init -y
npm install webpack webpack-cli --save-dev
the above commands will create the following:
-node_modules
-package.json
-package-lock.json

now create the following structure:
|- package.json
|- webpack.config.js
|- /dist
  |- main.js // will be created by webpack itself
  |- index.html
|- /src
  |- index.js
|- /node_modules

create a .gitignore and add node_modules inside of it
!Don't forget to add main.js to your index.html
-in your version the scripts property is as follows:
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  delete this one and add the following:
  "start": "webpack"
  this will tell the webpack to follow its default behavior. That means webpack will look for an index.js file in the src folder, and create a main.js file in the dist folder. For webpack to do this, you need a src folder and an index.js inside of it.
  //CONFIGURING WEBPACK
  you already created a webpack.config.js
  add the following inside the webpack.config.js:
  (note that even if you don't add this, the webpack will do what it'll do. This is the written form of its default behavior)
  
  
  const path = require('path');

module.exports = {
//this is our entry point
  entry: './src/index.js',
  //and this is where it'll spit the main.js
  output: {
    filename: 'main.js',
    path: path.resolve(__dirname, 'dist'),
  },
};

now go back to your package.json file 
change the scripts property as such:
"scripts": {
    "start": "webpack --config webpack.config.js"
 }
 
 //SETTING THE MODE DEVELOPMENT OR PRODUCTION
 go to the webpack.config.js
 inside the==> module.exports={
 mode: "development" //or production, you choose. 
 //development doesn't minify the main.js
 
 }
 
 //USING LOADERS
 choose a loader you need. Let's say we need style loader and css loader. Let's install them
 npm install --save-dev style-loader css-loader
 //USING SASS, and BOOTSTRAP (LOCALLY)
 - install bootstrap locally:
 npm install --save-dev bootstrap
 -install sass loader:
 npm install sass-loader node-sass webpack --save-dev

go to the webpack.config.js file and add this:

module: {
    rules: [
        {
            test: /\.scss$/,
            use:[
                "style-loader", //3. injects styles into DOM
                "css-loader", // 2. turns css into common js
                "sass-loader" //1. turns sass into css
            ]
        }
    ]
}

now create a main.scss file in the src directory
import bootstrap in main.scss as follows: 
@import "~bootstrapt/scss/bootstrap";
go to your index.js file and import the main.scss file:
import "./main.scss";
 


